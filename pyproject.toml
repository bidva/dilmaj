[project]
name = "dilmaj"
version = "0.1.0"
description = "A CLI tool to slice PDF files per page and process each page with GPT models"
authors = [
    {name = "Your Name", email = "your.email@example.com"}
]
readme = "README.md"
requires-python = ">=3.9"
dynamic = ["dependencies"]

[project.scripts]
dilmaj = "dilmaj.cli:main"

[tool.poetry]
packages = [{include = "dilmaj"}]

[tool.poetry.dependencies]
python = "^3.9"
click = "^8.1.7"
langchain = "^0.3.0"
langchain-openai = "^0.2.0"
pypdf = "^4.0.0"
tenacity = "^8.2.3"
python-dotenv = "^1.0.0"
rich = "^13.7.0"
aiofiles = "^23.2.1"
python-docx = "^1.1.0"

[tool.poetry.group.dev.dependencies]
pytest = "^7.4.0"
pytest-cov = "^4.1.0"
black = "^23.7.0"
isort = "^5.12.0"
mypy = "^1.5.0"
pre-commit = "^3.4.0"
pytest-mock = "^3.11.0"
pytest-asyncio = "^0.21.0"
coverage-badge = "^1.1.0"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.black]
line-length = 88
target-version = ['py39']

[tool.isort]
profile = "black"
multi_line_output = 3

[tool.mypy]
python_version = "3.9"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true

[tool.coverage.run]
source = ["dilmaj"]
omit = [
    "*/tests/*",
    "*/test_*",
    "*/__pycache__/*",
    "*/venv/*",
    "*/.venv/*"
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:"
]
show_missing = true
precision = 2

[tool.coverage.html]
directory = "htmlcov"
